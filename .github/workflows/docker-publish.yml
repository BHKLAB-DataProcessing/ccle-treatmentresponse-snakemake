name: Build and Push Docker Image

on:
    push:
        tags:
            - '*'
    workflow_dispatch:

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        permissions:
            packages: write
            contents: read

        steps:
        - name: Checkout source
          uses: actions/checkout@v4

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Log in to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Extract metadata
          id: meta
          run: |
            if [[ $GITHUB_REF == refs/tags/* ]]; then
            # For tag-based triggers
            echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
            echo "use_latest=true" >> "$GITHUB_OUTPUT"
            else
            # For manual dispatch
            echo "tag=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"
            echo "use_latest=false" >> "$GITHUB_OUTPUT"
            fi
            echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_OUTPUT"

        - name: Build and push with tag and latest
          if: steps.meta.outputs.use_latest == 'true'
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./Dockerfile
            platforms: linux/amd64
            push: true
            tags: |
              ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ github.event.repository.name }}:${{ steps.meta.outputs.tag }}
              ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ github.event.repository.name }}:latest

        - name: Build and push with commit ID
          if: steps.meta.outputs.use_latest == 'false'
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./Dockerfile
            platforms: linux/amd64
            push: true
            tags: |
              ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ github.event.repository.name }}:${{ steps.meta.outputs.tag }}
